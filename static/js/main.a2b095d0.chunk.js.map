{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","introduction","socialLinks","map","item","key","url","target","rel","Component","About","src","pic","alt","aboutmes","txt","address","email","button","class","role","Resume","education","UniversityName","specialization","MonthOfBeginning","YearOfBeginning","MonthOfEnding","YearOfEnding","Description","projects","ProjectLink","ProjectName","ProjectOverview","ProjectImage","length","work","CompanyName","Footer","imagebaseurl","linkedinId","App","Header_Header","About_About","Resume_Resume","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2b095d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nexport default class Header extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <header id=\"home\">\r\n          <nav id=\"nav-wrap\">\r\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\r\n            <ul id=\"nav\" className=\"nav\">\r\n              <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n              <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n              <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\r\n            </ul>\r\n          </nav>\r\n\r\n          <div className=\"row banner\">\r\n            <div className=\"banner-text\">\r\n              <h1 className=\"responsive-headline\">{resumeData.name}.</h1>\r\n              <h3 style={{ color: '#fff', fontFamily: 'sans-serif ' }}>{resumeData.introduction}\r\n              </h3>\r\n              <hr />\r\n              <ul className=\"social\">\r\n                {\r\n                  resumeData.socialLinks && resumeData.socialLinks.map(item => {\r\n                    return (\r\n                      <li key={item.name}>\r\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={item.className}></i></a>\r\n                      </li>\r\n                    )\r\n                  }\r\n                  )\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <p className=\"scrolldown\">\r\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\r\n          </p>\r\n\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class About extends Component {\r\n   render() {\r\n      let resumeData = this.props.resumeData;\r\n      return (\r\n         <section id=\"about\">\r\n            <div className=\"row\">\r\n\r\n               <div className=\"three columns\">\r\n\r\n                  <img className=\"profile-pic\" src={resumeData.pic} alt=\"\" />\r\n\r\n               </div>\r\n\r\n               <div className=\"nine columns main-col\">\r\n\r\n                  <h2>About Me</h2>\r\n                  <p>\r\n                     {\r\n                        resumeData.aboutmes.map(txt => <p>{txt}</p>)\r\n                     }\r\n                  </p>\r\n\r\n                  <div className=\"row\">\r\n\r\n                     <div className=\"columns contact-details\">\r\n\r\n                        <h2>Contact Details</h2>\r\n                        <p className=\"address\">\r\n                           <span>{resumeData.name}</span>\r\n                           <br></br>\r\n                           <span>\r\n                              {resumeData.address}\r\n                           </span>\r\n                           <br></br>\r\n                           <span>{resumeData.email}</span>\r\n                        </p>\r\n                     </div>\r\n\r\n                     <div className=\"columns resume-link\">\r\n                        <p>\r\n                           <a button class=\"button-84\" role=\"button\"\r\n                              href=\"./images/Tran_Pat_BS_2023.pdf\"\r\n                              target=\"_blank\">\r\n                              <i class=\"fa fa-download\"></i> Download Resume\r\n                           </a>\r\n                        </p>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Resume extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"resume\">\r\n\r\n        <div className=\"row education\">\r\n\r\n          <div className=\"three columns header-col\">\r\n            <h1><span>Education</span></h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {\r\n              resumeData.education && resumeData.education.map((item) => {\r\n                return (\r\n                  <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3>{item.UniversityName}</h3>\r\n                      <p className=\"info\">\r\n                        {item.specialization}\r\n                        <span>&bull;</span> <em className=\"date\">{item.MonthOfBeginning} {item.YearOfBeginning} - {item.MonthOfEnding} {item.YearOfEnding}</em>\r\n                      </p>\r\n                      <ul class=\"circle\">\r\n                        {\r\n                          item.Description.map(txt => <li>{txt}</li>)\r\n                        }\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row project\">\r\n          <div className=\"three columns header-col\">\r\n            <h1><span>Projects</span></h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {\r\n              resumeData.projects && resumeData.projects.map((item) => {\r\n                return (\r\n                  <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3>\r\n                        <a href={item.ProjectLink} target=\"_blank\" rel=\"noopener noreferrer\"> {item.ProjectName} </a>\r\n                      </h3>\r\n                      <p className=\"p-overview\">\r\n                        {item.ProjectOverview}\r\n                      </p>\r\n                      <p className=\"date\">\r\n                          {item.MonthOfBeginning} {item.YearOfBeginning} - {item.MonthOfEnding} {item.YearOfEnding}\r\n                      </p>\r\n                      <ul class=\"circle\">\r\n                        {\r\n                          item.Description.map(txt => <li>{txt}</li>)\r\n                        }\r\n                      </ul>\r\n                      {\r\n                        // only show if there is a link\r\n                        item.ProjectImage.length > 0 &&\r\n                        <div class=\"p-img\">\r\n                          <img class=\"p-img\" src={item.ProjectImage} alt=\"Showcase the project\"></img>\r\n                        </div>\r\n                      }\r\n                      \r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row work\">\r\n          <div className=\"three columns header-col\">\r\n            <h1><span>Work</span></h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {\r\n              resumeData.work && resumeData.work.map((item) => {\r\n                return (\r\n                  <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3>{item.CompanyName}</h3>\r\n                      <p className=\"info\">\r\n                        {item.title}\r\n                        <span>&bull;</span> <em className=\"date\">{item.MonthOfBeginning} {item.YearOfBeginning} - {item.MonthOfEnding} {item.YearOfEnding}</em>\r\n                      </p>\r\n                      <ul class=\"circle\">\r\n                        {\r\n                          item.Description.map(txt => <li>{txt}</li>)\r\n                        }\r\n                      </ul>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        {/*\r\n        <div className=\"row skill\">\r\n\r\n          <div className=\"three columns header-col\">\r\n            <h1><span>Skills</span></h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n\r\n            <p>\r\n              {resumeData.skillsDescription}\r\n            </p>\r\n\r\n            <div className=\"bars\">\r\n\r\n              <ul className=\"skills\">\r\n                {\r\n                  resumeData.skills && resumeData.skills.map((item) => {\r\n                    return (\r\n                      <li>\r\n                        <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\r\n                        </span><em>{item.skillname}</em>\r\n                      </li>\r\n                    )\r\n                  })\r\n                }\r\n\r\n              </ul>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        */}\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class Footer extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <footer>\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <ul className=\"social-links\">\r\n            {\r\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\r\n                return(\r\n                  <li>\r\n                    <a href={item.url}>\r\n                    <i className={item.className} />\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n          \r\n        </div>\r\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\r\n      </div>\r\n    </footer>\r\n    );\r\n  }\r\n}","let resumeData = {\r\n    // HOME section\r\n    \"imagebaseurl\":\"https://pat266.github.io/\",\r\n    \"name\": \"Pat Tran\",\r\n    \"pic\": \"images/profilepic.jpg\",\r\n    \"linkedinId\":\"pattran26\",\r\n    \"introduction\": \"I am a B.S. Computer Science Student at Georgia Tech. I enjoy learning about new technologies and creating software for personal usage.\",\r\n    \"socialLinks\":[\r\n        {\r\n          \"name\":\"linkedin\",\r\n          \"url\":\"https://www.linkedin.com/in/pattran26/\",\r\n          \"className\":\"fa fa-linkedin\"\r\n        },\r\n        {\r\n          \"name\":\"github\",\r\n          \"url\":\"https://github.com/pat266\",\r\n          \"className\":\"fa fa-github\"\r\n        },\r\n        {\r\n          \"name\":\"mail\",\r\n          \"url\":\"mailto:pattran26@gmail.com\",\r\n          \"className\":\"fa fa-envelope\"\r\n        },\r\n      ],\r\n    // ABOUT section\r\n    \"aboutmes\":[\r\n      \"I am a senior student at Georgia Tech with concentrations in Information Internetworks and People. My passion lies primarily in backend development and building scalable projects.\",\r\n      \"I am driven to develop software to solve problems. For instance, one of my childhood games had a very slow website due to its poor front-end implementation, so I created a game launcher to directly call its APIs to log in and launch the game smoothly. The game launcher also has many features, including an automatic captcha solver for the login process and an image translator to translate the in-game tasks and rewards, to improve my gaming experience.\",\r\n      \"I also have strong interpersonal, leadership, and communication skills. When I was a team leader for a team of 8 people to develop a chatbot, I was communicating with my teammates on the short and long-term goals, as well as spearheaded the development direction. Through this project, I learned how to collaborate with others and plan milestones effectively.\",\r\n      \"My primary programming language is Java, and I have also had experience in other languages such as Python, C#, C, and HTML/CSS/JavaScript/React.js. I am eager to learn and adapt to different environments and would love to further sharpen my skills in data management, DevOps, and back-end development.\",\r\n      \"Looking forward to connecting with you!\",\r\n    ],\r\n    \"address\":\"Atlanta, GA\",\r\n    \"email\":\"pattran26@gmail.com\",\r\n\r\n    // RESUME Section\r\n    \"education\":[\r\n      {\r\n        \"UniversityName\":\"Georgia Institute of Technology\",\r\n        \"specialization\":\"Computer Science\",\r\n        \"MonthOfBeginning\":\"January\",\r\n        \"YearOfBeginning\":\"2021\",\r\n        \"MonthOfEnding\":\"December\",\r\n        \"YearOfEnding\":\"2023 (Projected)\",\r\n        \"Description\":[\r\n          \"Threads: Information Internetworks and People.\",\r\n          \"GPA: 3.80/4.0\",\r\n          \"Relevant Courses: Object-Oriented Design (Java), Data Structures and Algorithms (Java), System-Level Programming (Assembly & C), Database System (SQL).\",\r\n        ],\r\n      },\r\n      {\r\n        \"UniversityName\":\"Georgia State University\",\r\n        \"specialization\":\"Computer Science\",\r\n        \"MonthOfBeginning\":\"August\",\r\n        \"YearOfBeginning\":\"2019\",\r\n        \"MonthOfEnding\":\"December\",\r\n        \"YearOfEnding\":\"2020\",\r\n        \"Description\":[\r\n          \r\n        ],\r\n      },\r\n    ],\r\n\r\n    \"projects\":[\r\n      /**\r\n      {\r\n        \"ProjectName\":\"Project Name\",\r\n        \"ProjectOverview\":\"Project Overview\",\r\n        \"MonthOfBeginning\":\"August\",\r\n        \"YearOfBeginning\":\"2019\",\r\n        \"MonthOfEnding\":\"December\",\r\n        \"YearOfEnding\":\"2020\",\r\n        \"Description\":[\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n        ],\r\n        \"ProjectImage\":\"\",\r\n        \"ProjectLink\":null,\r\n      },\r\n       */\r\n      {\r\n        \"ProjectName\":\"Game Launcher\",\r\n        \"ProjectOverview\":\"A game launcher with an instant image translation feature to understand the in-game tasks and rewards.\",\r\n        \"MonthOfBeginning\":\"May\",\r\n        \"YearOfBeginning\":\"2022\",\r\n        \"MonthOfEnding\":\"August\",\r\n        \"YearOfEnding\":\"2022\",\r\n        \"Description\":[\r\n          \"Design login and game windows with custom buttons in the title bar using the .NET Framework.\",\r\n          \"Utilize Tesseract OCR Engine to automatically solve the Captcha image to login with an accuracy rate of 86%.\",\r\n          \"Create a custom Snipping Tool to capture a selected part of the screen, and utilizes an ONNX formatted pre-trained model that was trained to recognize Chinese characters to extract text from the captured image.\",\r\n          \"Implement an algorithm to bulk translate text using the free translation APIs from the GTranslate package.\",\r\n          \"Customize the game perspective and zoom level by injecting code to the SWF game file using ActionScript.\",\r\n        ],\r\n        \"ProjectImage\":\"./images/projects/game_launcher_translation.gif\",\r\n        \"ProjectLink\":\"https://github.com/pat266/game-launcher\",\r\n      },\r\n      {\r\n        \"ProjectName\":\"Terminal C1Games Competition Tracker\",\r\n        \"ProjectOverview\":\"A tracker to keep record of all algorithms and the best algorithm a user or team submitted in a specified competition.\",\r\n        \"MonthOfBeginning\":\"June\",\r\n        \"YearOfBeginning\":\"2022\",\r\n        \"MonthOfEnding\":\"August\",\r\n        \"YearOfEnding\":\"2022\",\r\n        \"Description\":[\r\n          \"Retrieve algorithms’ information from the Terminal’s APIs and process it to extract useful information.\",\r\n          \"Update the leaderboard local json files at a set interval of time to keep track of all submitted algorithms, even when they are removed from the live leaderboard.\",\r\n        ],\r\n        \"ProjectImage\":\"\",\r\n        \"ProjectLink\":\"https://github.com/pat266/competitions_tracking\",\r\n      },\r\n      {\r\n        \"ProjectName\":\"TutorBot (ITS-Chatbot v2.1)\",\r\n        \"ProjectOverview\":\"Fine-tune the pre-trained transformer model to improve accuracy.\",\r\n        \"MonthOfBeginning\":\"Spring\",\r\n        \"YearOfBeginning\":\"2022\",\r\n        \"MonthOfEnding\":\"May\",\r\n        \"YearOfEnding\":\"2022\",\r\n        \"Description\":[\r\n          \"Implement metrics such as F1, exact match, and semantic similarity to examine the model's performance.\",\r\n          \"Generate a dataset of nearly 6,000 generated questions and answers from the DSP First textbook to improve the pre-trained Transformers model (https://pat266.github.io/textbook_SQuAD_explore/).\",\r\n          \"Utilizes the generated dataset to fine-tune the pre-trained Question Answering model to increase its accuracy by 15% (https://huggingface.co/ptran74/DSPFirst-Finetuning-5).\",\r\n          \"Add CUDA support to increase the average computational speed from 15 seconds to 6 seconds.\",\r\n        ],\r\n        \"ProjectImage\":\"\",\r\n        \"ProjectLink\":\"https://github.gatech.edu/VIP-ITS/TutorBot-Spring-2022\",\r\n      },\r\n      {\r\n        \"ProjectName\":\"TutorBot (ITS-Chatbot v2.0)\",\r\n        \"ProjectOverview\":\"Implement a new transformer-based approach and integrate it with the TutorJS Project.\",\r\n        \"MonthOfBeginning\":\"August\",\r\n        \"YearOfBeginning\":\"2021\",\r\n        \"MonthOfEnding\":\"December\",\r\n        \"YearOfEnding\":\"2021\",\r\n        \"Description\":[\r\n          \"Enhance the accuracy of the existing Predictive model by incorporating the relevance metric when comparing the similarity between two documents.\",\r\n          \"Implement a new process using the BM25 algorithm to retrieve the top-n relevant documents to improve processing speed by 40% while retaining the same accuracy score.\",\r\n          \"Examine different Transformers pre-trained question-answering models using the Hugging Face library to find the best model to extract answers while balancing accuracy level and processing time.\",\r\n          \"Develop a web scraper to retrieve the top images result of the user query.\",\r\n          \"Create REST APIs with Flask for integration with other projects.\",\r\n          \"Develop automated tests using PyTest and Flask-Testing to test JSON responses from the APIs.\",\r\n        ],\r\n        \"ProjectImage\":\"./images/projects/chatbot_fall_2021.png\",\r\n        \"ProjectLink\":\"https://github.gatech.edu/VIP-ITS/TutorBot\",\r\n      },\r\n      {\r\n        \"ProjectName\":\"Drone Grocery Delivery\",\r\n        \"ProjectOverview\":\"Design and implement an online store system using the classical methodology for relational database development.\",\r\n        \"MonthOfBeginning\":\"January\",\r\n        \"YearOfBeginning\":\"2021\",\r\n        \"MonthOfEnding\":\"May\",\r\n        \"YearOfEnding\":\"2021\",\r\n        \"Description\":[\r\n          \"Design an Entity Relationship Diagram that represents all functionalities of the application.\",\r\n          \"Create MySQL stored procedures from the ER Diagram to insert, update, or delete the data inside of the appropriate table(s). Host it on AWS Relational Database Service for ease of accessibility.\",\r\n          \"Utilize JavaFX to design the software interface and the MySQL Connector/J driver to connect the application to the Amazon database.\",\r\n        ],\r\n        \"ProjectImage\":\"./images/projects/drone_grocery_erd.png\",\r\n        \"ProjectLink\":\"https://github.com/pat266/Drone_Grocery_Delivery\",\r\n      },\r\n      {\r\n        \"ProjectName\":\"Intelligent Tutoring System - Chatbot v1.5\",\r\n        \"ProjectOverview\":\"Exploratory and experimental work on ITS-Chatbot to improve data labeling with topic modeling on DSP First textbook.\",\r\n        \"MonthOfBeginning\":\"January\",\r\n        \"YearOfBeginning\":\"2021\",\r\n        \"MonthOfEnding\":\"May\",\r\n        \"YearOfEnding\":\"2021\",\r\n        \"Description\":[\r\n          \"Implement LDA (unsupervised) and CorEx (semi-supervised) models to find latent topics from all unlabeled documents and group them according to their topics.\",\r\n          \"Maximize the LDA’s topic coherence score and CorEx’s total correlation score by fine-tuning with a different number of topics and weight values, and various sets of weighted words.\",\r\n          \"Utilize the topic model to predict which textbook section(s) are relevant to the user query.\",\r\n        ],\r\n        \"ProjectImage\":\"./images/projects/chatbot_topic_modeling.png\",\r\n        \"ProjectLink\":\"https://github.gatech.edu/VIP-ITS/Chatbot-Spring-2021\",\r\n      },\r\n    ],\r\n\r\n    \"work\":[\r\n      {\r\n        \"CompanyName\":\"ABC Home Health Care Services LLC \",\r\n        \"title\":\"Home Health Aide\",\r\n        \"MonthOfBeginning\":\"September\",\r\n        \"YearOfBeginning\":\"2019\",\r\n        \"MonthOfEnding\":\"\",\r\n        \"YearOfEnding\":\"Present\",\r\n        \"Description\":[\r\n          \"Attending to one client at their home to ensure the living safest environment.\",\r\n          \"Improving the client’s quality of life by monitoring them closely\",\r\n        ],\r\n      },\r\n      {\r\n        \"CompanyName\":\"Viet Hong Vietnamese School\",\r\n        \"title\":\"Lead IT\",\r\n        \"MonthOfBeginning\":\"July\",\r\n        \"YearOfBeginning\":\"2020\",\r\n        \"MonthOfEnding\":\"May\",\r\n        \"YearOfEnding\":\"2021\",\r\n        \"Description\":[\r\n          \"Lead the weekly meetings to instruct the teachers through the necessary steps for effective online teaching and parent communication.\",\r\n          \"Evaluate IT problems with the administrators and formulate the best solution.\",\r\n          \"Collaborate with the IT team to create a step-by-step guide in Vietnamese to use software such as Google Meet, Google Classroom, and Google Jamboard.\",\r\n        ],\r\n      }\r\n    ],\r\n    /** \r\n    \"skillsDescription\":\"\",\r\n    \"skills\":[\r\n      {\r\n        \"skillname\":\"HTML5\"\r\n      },\r\n      {\r\n        \"skillname\":\"CSS\"\r\n      },\r\n      {\r\n        \"skillname\":\"Reactjs\"\r\n      }\r\n    ]\r\n    */\r\n  }\r\n  \r\n  export default resumeData","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Resume from './components/Resume';\r\n// import Testimonials from  './components/Testimonials';\r\n// import ContactUs from './components/ContactUs';\r\nimport Footer from './components/Footer';\r\nimport resumeData from './resumeData';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header resumeData={resumeData}/>\r\n        <About resumeData={resumeData}/>\r\n        <Resume resumeData={resumeData}/>\r\n        <Footer resumeData={resumeData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}